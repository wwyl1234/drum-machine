{"version":3,"sources":["index.js"],"names":["DrumMachine","props","state","audioMap","currentAudioName","handleKeyPressed","bind","handleOnClick","audioName","Audio","play","event","keyValue","key","toUpperCase","this","setState","playSound","keyLetter","k","DrumPad","onClick","id","tabIndex","onKeyDown","renderDrumPad","React","Component","audioLocation","className","src","type","ReactDOM","render","document","getElementById"],"mappings":"uPAMMA,G,wDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,SAAW,CACP,EAAK,OACL,EAAK,OACL,EAAK,QACL,EAAK,QACL,EAAK,OACL,EAAK,OACL,EAAK,OACL,EAAK,WACL,EAAK,OAETC,iBAAkB,IAEtB,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAjBP,E,sDAoBRE,GACM,IAAIC,MAxBP,iBAwBwBD,EAAY,QACvCE,S,uCAIOC,GACb,IAAIC,EAAWD,EAAME,IAAIC,cACY,MAAjCC,KAAKb,MAAMC,SAASS,KACpBG,KAAKC,SAAS,CACVb,SAAUY,KAAKb,MAAMC,SACrBC,iBAAkBW,KAAKb,MAAMC,SAASS,KAE1CG,KAAKE,UAAUF,KAAKb,MAAMC,SAASS,O,oCAK7BM,GACVH,KAAKC,SAAS,CACVb,SAAUY,KAAKb,MAAMC,SACrBC,iBAAkBW,KAAKb,MAAMC,SAASe,KAG1CH,KAAKE,UAAUF,KAAKb,MAAMC,SAASe,M,oCAGzBC,GAAI,IAAD,OACb,OACI,kBAACC,EAAD,CACIF,UAAWC,EACXX,UAAWO,KAAKb,MAAMC,SAASgB,GAC/BE,QAAS,kBAAM,EAAKd,cAAcY,Q,+BAM1C,OACI,yBAAKG,GAAG,eAAeC,SAAS,IAAIC,UAAWT,KAAKV,kBAC/CU,KAAKU,cAAc,KACnBV,KAAKU,cAAc,KACnBV,KAAKU,cAAc,KACnBV,KAAKU,cAAc,KACnBV,KAAKU,cAAc,KACnBV,KAAKU,cAAc,KACnBV,KAAKU,cAAc,KACnBV,KAAKU,cAAc,KACnBV,KAAKU,cAAc,KACpB,yBAAKH,GAAG,WACHP,KAAKb,MAAME,uB,GAvENsB,IAAMC,YA+E1BP,E,uKAGE,IAAIQ,EApFK,iBAoFsBb,KAAKd,MAAMO,UAAY,OACtD,OACI,yBAAKqB,UAAU,WAAWP,GAAIP,KAAKd,MAAMO,UAAWa,QAASN,KAAKd,MAAMoB,SACpE,4BAAKN,KAAKd,MAAMiB,WAChB,2BAAOY,IAAKF,EAAeC,UAAU,OAAOP,GAAIP,KAAKd,MAAMY,IAAKkB,KAAK,mB,GAP/DL,IAAMC,WAe5BK,IAASC,OACL,kBAACjC,EAAD,MACAkC,SAASC,eAAe,W","file":"static/js/main.6e767b94.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst AUDIODIR = '/public/media/'\n\nclass DrumMachine extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            audioMap : {\n                'Q': 'Bang',\n                'W': 'Beat',\n                'E': 'Bling',\n                'A': 'Bloop',\n                'S': 'Boom',\n                'D': 'Clap',\n                'Z': 'Ding',\n                'X': 'Drumbeat',\n                'C': 'Zap',\n            },\n            currentAudioName: \"\",\n        };\n        this.handleKeyPressed = this.handleKeyPressed.bind(this);\n        this.handleOnClick = this.handleOnClick.bind(this);\n    }\n    // play sound \n    playSound(audioName){\n        let sound = new Audio(AUDIODIR + audioName + '.m4a');\n        sound.play();\n    }\n\n    // handle key press\n    handleKeyPressed(event){\n        let keyValue = event.key.toUpperCase();\n        if (this.state.audioMap[keyValue] != null){\n            this.setState({\n                audioMap: this.state.audioMap,\n                currentAudioName: this.state.audioMap[keyValue],\n            });\n            this.playSound(this.state.audioMap[keyValue]);\n        }\n    }\n\n    // handle mouse key event \n    handleOnClick(keyLetter){\n        this.setState({\n            audioMap: this.state.audioMap,\n            currentAudioName: this.state.audioMap[keyLetter],\n        });\n        // play sound \n        this.playSound(this.state.audioMap[keyLetter]);\n    }\n\n    renderDrumPad(k) {\n        return (\n            <DrumPad \n                keyLetter={k} \n                audioName={this.state.audioMap[k]}\n                onClick={() => this.handleOnClick(k)} \n            />\n        );\n    }\n\n    render() {\n        return (\n            <div id='drum-machine' tabIndex=\"0\" onKeyDown={this.handleKeyPressed}>\n                {this.renderDrumPad('Q')}\n                {this.renderDrumPad('W')}\n                {this.renderDrumPad('E')}\n                {this.renderDrumPad('A')}\n                {this.renderDrumPad('S')}\n                {this.renderDrumPad('D')}\n                {this.renderDrumPad('Z')}\n                {this.renderDrumPad('X')}\n                {this.renderDrumPad('C')}\n                <div id='display'>\n                    {this.state.currentAudioName}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nclass DrumPad extends React.Component {\n\n    render(){\n        let audioLocation = AUDIODIR + this.props.audioName + \".m4a\";\n        return (\n            <div className='drum-pad' id={this.props.audioName} onClick={this.props.onClick} >\n                <h1>{this.props.keyLetter}</h1>\n                <audio src={audioLocation} className='clip' id={this.props.key} type=\"audio/mp4\"></audio>\n            </div>\n        )\n    }\n}\n\n\n// ============================================\nReactDOM.render(\n    <DrumMachine />,\n    document.getElementById('root')\n);"],"sourceRoot":""}