{"version":3,"sources":["index.js"],"names":["DrumMachine","props","state","audioMap","name","src","currentAudioName","handleKeyPressed","bind","handleOnClick","sound","Audio","currentTime","playPromise","play","undefined","then","_","console","log","catch","error","event","keyValue","key","toUpperCase","this","setState","playSound","keyLetter","k","DrumPad","audioName","source","onClick","id","tabIndex","onKeyDown","className","renderDrumPad","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uPAKMA,G,wDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,CACTC,SAAW,CACP,EAAK,CACDC,KAAM,OACNC,IAAK,4DAET,EAAK,CACDD,KAAM,OACNC,IAAK,4DAET,EAAK,CACDD,KAAM,QACNC,IAAK,4DAET,EAAK,CACDD,KAAM,QACNC,IAAK,8DAET,EAAK,CACDD,KAAM,OACNC,IAAK,4DAET,EAAK,CACDD,KAAM,OACNC,IAAK,0DAET,EAAK,CACDD,KAAM,OACNC,IAAK,8DAET,EAAK,CACDD,KAAM,WACNC,IAAK,8DAET,EAAK,CACDD,KAAM,MACNC,IAAK,2DAGbC,iBAAkB,IAEtB,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBA7CP,E,sDAgDRH,GACN,IAAIK,EAAQ,IAAIC,MAAMN,GAEtBK,EAAME,YAAc,EACpB,IAAIC,EAAcH,EAAMI,YACJC,IAAhBF,GACAA,EACGG,MAAK,SAAAC,GAGJC,QAAQC,IAAI,wBAEbC,OAAM,SAAAC,GAGLH,QAAQC,IAAI,2B,uCAMPG,GACb,IAAIC,EAAWD,EAAME,IAAIC,cACY,MAAjCC,KAAKxB,MAAMC,SAASoB,KACpBG,KAAKC,SAAS,CACVxB,SAAUuB,KAAKxB,MAAMC,SACrBG,iBAAkBoB,KAAKxB,MAAMC,SAASoB,GAAUnB,OAEpDsB,KAAKE,UAAUF,KAAKxB,MAAMC,SAASoB,GAAUlB,Q,oCAKvCwB,GACVH,KAAKC,SAAS,CACVxB,SAAUuB,KAAKxB,MAAMC,SACrBG,iBAAkBoB,KAAKxB,MAAMC,SAAS0B,GAAWzB,OAGrDsB,KAAKE,UAAUF,KAAKxB,MAAMC,SAAS0B,GAAWxB,O,oCAGpCyB,GAAI,IAAD,OACb,OACI,kBAACC,EAAD,CACIF,UAAWC,EACXE,UAAWN,KAAKxB,MAAMC,SAAS2B,GAAG1B,KAClC6B,OAAQP,KAAKxB,MAAMC,SAAS2B,GAAGzB,IAC/B6B,QAAS,kBAAM,EAAKzB,cAAcqB,Q,+BAM1C,OACI,yBAAKK,GAAG,eAAeC,SAAS,IAAIC,UAAWX,KAAKnB,iBAAkB+B,UAAU,aAC5E,yBAAKA,UAAU,OACVZ,KAAKa,cAAc,KACnBb,KAAKa,cAAc,KACnBb,KAAKa,cAAc,MAExB,yBAAKD,UAAU,OACVZ,KAAKa,cAAc,KACnBb,KAAKa,cAAc,KACnBb,KAAKa,cAAc,MAExB,yBAAKD,UAAU,OACVZ,KAAKa,cAAc,KACnBb,KAAKa,cAAc,KACnBb,KAAKa,cAAc,MAExB,yBAAKJ,GAAG,WACHT,KAAKxB,MAAMI,uB,GAzHNkC,IAAMC,YAiI1BV,E,uKAIE,OACI,yBAAKO,UAAU,kBAAkBH,GAAIT,KAAKzB,MAAM+B,UAAWE,QAASR,KAAKzB,MAAMiC,SAC3E,4BAAKR,KAAKzB,MAAM4B,WAChB,2BAAOxB,IAAKqB,KAAKzB,MAAMgC,OAAQK,UAAU,OAAOH,GAAIT,KAAKzB,MAAMuB,W,GAPzDgB,IAAMC,WAe5BC,IAASC,OACL,kBAAC3C,EAAD,MACA4C,SAASC,eAAe,W","file":"static/js/main.f6031115.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nconst AUDIODIR = './media/'\n\nclass DrumMachine extends React.Component {\n    constructor(props){\n        super(props);\n        // Use the audio media files from freecodecamp\n        this.state = {\n            audioMap : {\n                'Q': {\n                    name: 'Bang',\n                    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n                },\n                'W': {\n                    name: 'Beat',\n                    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n                },\n                'E': { \n                    name: 'Bling',\n                    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n                },\n                'A': {\n                    name: 'Bloop',\n                    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n                },\n                'S': {\n                    name: 'Boom',\n                    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3' \n                },\n                'D': {\n                    name: 'Clap',\n                    src: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n                },\n                'Z': {\n                    name: 'Ding',\n                    src: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n                },\n                'X': {\n                    name: 'Drumbeat',\n                    src: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n                },\n                'C': {\n                    name: 'Zap',\n                    src: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n                }\n            },\n            currentAudioName: \"\",\n        };\n        this.handleKeyPressed = this.handleKeyPressed.bind(this);\n        this.handleOnClick = this.handleOnClick.bind(this);\n    }\n    // play sound \n    playSound(src){\n        let sound = new Audio(src);\n         // sound.src = AUDIODIR + audioName + '.m4a';\n        sound.currentTime = 0;\n        let playPromise = sound.play();\n        if (playPromise !== undefined) {\n            playPromise\n              .then(_ => {\n                // Automatic playback started!\n                // Show playing UI.\n                console.log(\"audio played auto\");\n              })\n              .catch(error => {\n                // Auto-play was prevented\n                // Show paused UI.\n                console.log(\"playback prevented\");\n              });\n          }\n    }\n\n    // handle key press\n    handleKeyPressed(event){\n        let keyValue = event.key.toUpperCase();\n        if (this.state.audioMap[keyValue] != null){\n            this.setState({\n                audioMap: this.state.audioMap,\n                currentAudioName: this.state.audioMap[keyValue].name,\n            });\n            this.playSound(this.state.audioMap[keyValue].src);\n        }\n    }\n\n    // handle mouse key event \n    handleOnClick(keyLetter){\n        this.setState({\n            audioMap: this.state.audioMap,\n            currentAudioName: this.state.audioMap[keyLetter].name,\n        });\n        // play sound \n        this.playSound(this.state.audioMap[keyLetter].src);\n    }\n\n    renderDrumPad(k) {\n        return (\n            <DrumPad \n                keyLetter={k} \n                audioName={this.state.audioMap[k].name}\n                source={this.state.audioMap[k].src}\n                onClick={() => this.handleOnClick(k)} \n            />\n        );\n    }\n\n    render() {\n        return (\n            <div id='drum-machine' tabIndex=\"0\" onKeyDown={this.handleKeyPressed} className='container'>\n                <div className='row'>\n                    {this.renderDrumPad('Q')}\n                    {this.renderDrumPad('W')}\n                    {this.renderDrumPad('E')}\n                </div>\n                <div className='row'>\n                    {this.renderDrumPad('A')}\n                    {this.renderDrumPad('S')}\n                    {this.renderDrumPad('D')}\n                </div>\n                <div className='row'>\n                    {this.renderDrumPad('Z')}\n                    {this.renderDrumPad('X')}\n                    {this.renderDrumPad('C')}\n                </div>\n                <div id='display'>\n                    {this.state.currentAudioName}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nclass DrumPad extends React.Component {\n\n    render(){\n        //let audioLocation = AUDIODIR + this.props.audioName + \".m4a\";\n        return (\n            <div className='drum-pad col-sm' id={this.props.audioName} onClick={this.props.onClick}>\n                <h1>{this.props.keyLetter}</h1>\n                <audio src={this.props.source} className='clip' id={this.props.key}></audio>\n            </div>\n        )\n    }\n}\n\n\n// ============================================\nReactDOM.render(\n    <DrumMachine />,\n    document.getElementById('root')\n);"],"sourceRoot":""}